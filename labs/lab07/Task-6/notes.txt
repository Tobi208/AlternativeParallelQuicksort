I can't find -ftree-vectorizer-verbose in the man page. On vitisppa we have to use -fopt-info-vec-missed instead apparently.

Using -fopt-info-vec:
matvec.c:21:23: optimized: loop vectorized using 16 byte vectors
matvec.c:31:31: optimized: loop vectorized using 16 byte vectors

Using -fopt-info-vec-missed for lines 20-23:
matvec.c:20:19: missed: couldn't vectorize loop
matvec.c:22:33: missed: failed: evolution of base is not affine.
matvec.c:21:23: missed: couldn't vectorize loop
matvec.c:22:22: missed: not vectorized: complicated access pattern.
matvec.c:20:19: missed: couldn't vectorize loop
matvec.c:22:33: missed: failed: evolution of base is not affine.
matvec.c:21:23: missed: couldn't vectorize loop
matvec.c:22:22: missed: not vectorized: complicated access pattern.

Unoptimized time:
Ref:      time = 0.520624
Auto-vec: time = 0.508297



After introducing a sum to the outer loop to add to in the inner loop:

This is "Example 13: Outer-loop:" from the website

No new -fopt-info-vec details.
But less missed vectorizations:
matvec.c:21:19: missed: couldn't vectorize loop
matvec.c:24:28: missed: failed: evolution of base is not affine.

Time hasn't improved though
Ref:      time = 0.504870
Auto-vec: time = 0.506675


I cannot find any more things to do to improve auto vectorization according to the website.



Using -march=native:

Still no speedup
Ref: time = 0.462816
Auto-vec: time = 0.463469



Using -ffast-math:

Still no speedup
Ref: time = 0.301532
Auto-vec: time = 0.298736


Seems like all compiler opimizations are applied to matvec_ref and matvec_autovec equally effectively.